name: Assign label to open PR
on:
  pull_request:
    types: [opened, edited]

jobs:
  assign-labels:
    runs-on: ubuntu-latest

    env:
      PR_TITLE: ${{ github.event.pull_request.title }}
      PR_BODY: ${{ github.event.pull_request.body }}

    permissions:
      pull-requests: write

    steps:
      - name: Remove all labels
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.removeAllLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
            })

      # - name: Assign labels
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       github.rest.issues.addLabels({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         labels: (() => {
      #           const theLabels = [];

      #           if (process.env.PR_TITLE.startsWith('feat')) {
      #             theLabels.push('type: feat');
      #           }

      #           if (process.env.PR_TITLE.startsWith('fix')) {
      #             theLabels.push('type: fix');
      #           }

      #           if (process.env.PR_BODY.includes('# JIRA1-')) {
      #             theLabels.push('task: JIRA1');
      #           }

      #           if (process.env.PR_BODY.includes('# JIRA2-')) {
      #             theLabels.push('task: JIRA2');
      #           }

      #           return theLabels;
      #         })()
      #       })

      - name: Get current time
        uses: josStorer/get-current-time@v2
        id: current-time
        with:
          format: YYYYMMDD-HH
          utcOffset: "+08:00"

      - name: Use current time
        env:
          TIME: "${{ steps.current-time.outputs.time }}"
          R_TIME: "${{ steps.current-time.outputs.readableTime }}"
          F_TIME: "${{ steps.current-time.outputs.formattedTime }}"
          YEAR: "${{ steps.current-time.outputs.year }}"
          DAY: "${{ steps.current-time.outputs.day }}"
        run: echo "TEST_TIME=$TIME" >> $GITHUB_ENV
      - name: Update PR body
        uses: actions/github-script@v6
        env:
          TESTTIME2: ${{env.TEST_TIME}}
        with:
          script: |
            github.rest.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: process.env.TEST_TIME
            })
